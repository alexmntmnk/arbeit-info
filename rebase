merge создаёт коммит слияния. И после merge остаются три удобных коммита. Чтобы продолжить используя только первую нить, только вторую нить, или все вместе.

коммит A ->
           |-> merge коммит C
коммит B ->
По сути merge создаёт историю.

А rebase меняет свою историю. Допустим вы написали свою работа D используя только видимую ветку коммит A.

         > работа D 
        /
коммит A ->
           |-> merge коммит C
коммит B ->
но передумали и перенесли всю свою работу в появившуюся ветку коммит B. И сделали rebase на коммит B :

коммит A ->
           |-> merge коммит C
коммит B ->
        \
         > работа D
или после rebase на коммит С :

коммит A ->
           |-> merge коммит C -> работа D
коммит B ->
rebase используют если хотят продолжить работу основываясь от чьей-то работы другого человека. Все коммиты вашей ветки работа D это новые коммиты, всё переписывается по-новой и забывается всё старое.

Линейность это то, что ваша работа D использует всё, что видно (A,B,C). Если использовать merge вместо rebase получится такой граф :

         > работа D             -> \
        /                           |-> merge D & C
коммит A ->                        / 
           |-> merge коммит C   -> 
коммит B ->
И есть возможность продолжать вашу ветку как без слияния так и с ним. rebase имеет разрушительное действие для истории. Если вы передумали пользоваться коммитом C то прийдется опять делать rebase.

Т.е. merge полностью сохраняет историю своей ветки, а rebase ее переносит в новую (свою ветку удаляет, как будто ее и не было) и при этом не создает коммита слияния
